<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üõí PantelMed Shop - –ú–∞–≥–∞–∑–∏–Ω –ë–ê–î—ñ–≤</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        /* –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–µ –º–µ–Ω—é */
        .navigation {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 15px 0;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .nav-container {
            max-width: 800px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
        }
        
        .logo {
            color: white;
            font-size: 20px;
            font-weight: bold;
            text-decoration: none;
        }
        
        .nav-menu {
            display: flex;
            gap: 15px;
        }
        
        .nav-button {
            background: rgba(255,255,255,0.2);
            border: 1px solid rgba(255,255,255,0.3);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            text-decoration: none;
            font-size: 14px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .nav-button:hover {
            background: rgba(255,255,255,0.3);
            transform: translateY(-1px);
        }
        
        .nav-button.active {
            background: rgba(255,255,255,0.3);
            border-color: white;
        }
        
        /* –ú–∞–≥–∞–∑–∏–Ω —Å—Ç–∏–ª—ñ */
        .shop-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .shop-header {
            text-align: center;
            margin-bottom: 30px;
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .product-card {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
            border: 2px solid transparent;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
            border-color: #4CAF50;
        }
        
        .product-image {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #4CAF50, #45a049);
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 36px;
            margin: 0 auto 15px;
        }
        
        .product-title {
            font-size: 18px;
            font-weight: bold;
            color: #333;
            text-align: center;
            margin-bottom: 10px;
        }
        
        .product-description {
            color: #666;
            font-size: 14px;
            text-align: center;
            margin-bottom: 15px;
            line-height: 1.5;
        }
        
        .product-benefits {
            background: #f8f9fa;
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 15px;
        }
        
        .product-benefits ul {
            margin: 0;
            padding-left: 15px;
            font-size: 13px;
            color: #555;
        }
        
        .product-price {
            text-align: center;
            margin-bottom: 15px;
        }
        
        .price-amount {
            font-size: 24px;
            font-weight: bold;
            color: #4CAF50;
        }
        
        .price-crypto {
            font-size: 14px;
            color: #666;
        }
        
        .add-to-cart-btn {
            width: 100%;
            background: #4CAF50;
            color: white;
            border: none;
            padding: 12px;
            border-radius: 8px;
            font-weight: bold;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        
        .add-to-cart-btn:hover {
            background: #45a049;
        }
        
        .add-to-cart-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
        
        /* –ö–æ—à–∏–∫ */
        .cart-section {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            position: sticky;
            top: 20px;
        }
        
        .cart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f0f0f0;
        }
        
        .cart-title {
            font-size: 20px;
            font-weight: bold;
            color: #333;
        }
        
        .cart-count {
            background: #4CAF50;
            color: white;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: bold;
        }
        
        .cart-items {
            margin-bottom: 20px;
        }
        
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #f0f0f0;
        }
        
        .cart-item:last-child {
            border-bottom: none;
        }
        
        .item-info {
            flex-grow: 1;
        }
        
        .item-name {
            font-weight: bold;
            color: #333;
        }
        
        .item-price {
            color: #666;
            font-size: 14px;
        }
        
        .item-controls {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .quantity-btn {
            background: #f0f0f0;
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .quantity-btn:hover {
            background: #e0e0e0;
        }
        
        .quantity {
            font-weight: bold;
            min-width: 20px;
            text-align: center;
        }
        
        .cart-total {
            text-align: center;
            margin-bottom: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
        }
        
        .total-amount {
            font-size: 24px;
            font-weight: bold;
            color: #4CAF50;
        }
        
        .checkout-btn {
            width: 100%;
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
            border: none;
            padding: 15px;
            border-radius: 10px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .checkout-btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
        }
        
        .checkout-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
        }
        
        .empty-cart {
            text-align: center;
            color: #666;
            font-style: italic;
            padding: 20px 0;
        }
        
        /* Checkout —Ñ–æ—Ä–º–∞ */
        .checkout-form {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-top: 20px;
            display: none;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #333;
        }
        
        .form-input {
            width: 100%;
            padding: 12px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }
        
        .form-input:focus {
            outline: none;
            border-color: #4CAF50;
        }
        
        .form-select {
            width: 100%;
            padding: 12px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            background: white;
        }
        
        .order-summary {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
        }
        
        /* –ú–æ–±—ñ–ª—å–Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü—ñ—è */
        @media (max-width: 768px) {
            .shop-container {
                padding: 15px;
            }
            
            .products-grid {
                grid-template-columns: 1fr;
            }
            
            .nav-container {
                flex-direction: column;
                gap: 10px;
                padding: 0 15px;
            }
            
            .nav-menu {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <!-- –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–µ –º–µ–Ω—é -->
    <nav class="navigation">
        <div class="nav-container">
            <a href="index.html" class="logo">üè• PantelMed</a>
            <div class="nav-menu">
                <a href="index.html" class="nav-button">
                    üíä –ü—ñ–¥–ø–∏—Å–∫–∞
                </a>
                <a href="#" class="nav-button active">
                    üõí PantelMed Shop
                </a>
            </div>
        </div>
    </nav>

    <div class="shop-container">
        <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–∞–≥–∞–∑–∏–Ω—É -->
        <div class="shop-header">
            <h1>üõí PantelMed Shop</h1>
            <p>–ü—Ä–µ–º—ñ—É–º –ë–ê–î–∏ –¥–ª—è –≤–∞—à–æ–≥–æ –∑–¥–æ—Ä–æ–≤'—è</p>
            <div id="user-info" style="margin-top: 15px; font-size: 14px; color: #666;">
                <strong>üÜî ID:</strong> <span id="userIdDisplay">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</span>
            </div>
        </div>

        <div style="display: grid; grid-template-columns: 1fr 350px; gap: 30px; align-items: start;">
            <!-- –¢–æ–≤–∞—Ä–∏ -->
            <div class="products-section">
                <div class="products-grid" id="products-grid">
                    <!-- –¢–æ–≤–∞—Ä–∏ –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ —á–µ—Ä–µ–∑ JavaScript -->
                </div>
            </div>

            <!-- –ö–æ—à–∏–∫ -->
            <div class="cart-section">
                <div class="cart-header">
                    <div class="cart-title">üõí –ö–æ—à–∏–∫</div>
                    <div class="cart-count" id="cart-count">0</div>
                </div>
                
                <div class="cart-items" id="cart-items">
                    <div class="empty-cart">–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</div>
                </div>
                
                <div class="cart-total" id="cart-total" style="display: none;">
                    <div>–ó–∞–≥–∞–ª–æ–º:</div>
                    <div class="total-amount" id="total-amount">$0.00</div>
                    <div style="font-size: 14px; color: #666;">‚âà <span id="total-crypto">0</span> USDT</div>
                </div>
                
                <button class="checkout-btn" id="checkout-btn" onclick="showCheckoutForm()" disabled>
                    üöÄ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                </button>
            </div>
        </div>

        <!-- Checkout —Ñ–æ—Ä–º–∞ -->
        <div class="checkout-form" id="checkout-form">
            <h3>üìã –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3>
            
            <div class="order-summary" id="order-summary">
                <!-- –î–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è -->
            </div>
            
            <form id="order-form">
                <div class="form-group">
                    <label class="form-label">üìû –¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –∑–≤'—è–∑–∫—É *</label>
                    <input type="tel" class="form-input" id="phone" placeholder="+380XXXXXXXXX" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label">üèôÔ∏è –ú—ñ—Å—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∏ *</label>
                    <select class="form-select" id="city" required>
                        <option value="">–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ</option>
                        <option value="kyiv">–ö–∏—ó–≤</option>
                        <option value="lviv">–õ—å–≤—ñ–≤</option>
                        <option value="odesa">–û–¥–µ—Å–∞</option>
                        <option value="kharkiv">–•–∞—Ä–∫—ñ–≤</option>
                        <option value="dnipro">–î–Ω—ñ–ø—Ä–æ</option>
                        <option value="zaporizhzhia">–ó–∞–ø–æ—Ä—ñ–∂–∂—è</option>
                        <option value="kryvyirig">–ö—Ä–∏–≤–∏–π –†—ñ–≥</option>
                        <option value="mykolaiv">–ú–∏–∫–æ–ª–∞—ó–≤</option>
                        <option value="other">–Ü–Ω—à–µ –º—ñ—Å—Ç–æ</option>
                    </select>
                </div>
                
                <div class="form-group" id="other-city-group" style="display: none;">
                    <label class="form-label">üèôÔ∏è –ù–∞–∑–≤–∞ –º—ñ—Å—Ç–∞</label>
                    <input type="text" class="form-input" id="other-city" placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞">
                </div>
                
                <div class="form-group">
                    <label class="form-label">üì¶ –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏ *</label>
                    <input type="text" class="form-input" id="warehouse" placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ1" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label">üí≠ –ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</label>
                    <textarea class="form-input" id="comment" rows="3" placeholder="–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–±–∞–∂–∞–Ω–Ω—è –∞–±–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"></textarea>
                </div>
                
                <div style="display: flex; gap: 15px; margin-top: 30px;">
                    <button type="button" class="btn-secondary" onclick="hideCheckoutForm()" style="flex: 1;">
                        ‚óÄÔ∏è –ù–∞–∑–∞–¥
                    </button>
                    <button type="submit" class="checkout-btn" style="flex: 2;">
                        ‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
        const API_BASE = window.location.origin;
        let currentTelegramUser = null;
        let userId = null;
        let cart = [];

        // –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä—ñ–≤
        const products = [
            {
                id: 'omega3',
                name: '–û–º–µ–≥–∞-3 –ü—Ä–µ–º—ñ—É–º',
                description: '–í–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω—ñ –∂–∏—Ä–Ω—ñ –∫–∏—Å–ª–æ—Ç–∏ –¥–ª—è —Å–µ—Ä—Ü–µ–≤–æ-—Å—É–¥–∏–Ω–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ —Ç–∞ –º–æ–∑–∫—É',
                price: 2.6,
                emoji: 'üêü',
                benefits: [
                    '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ —Å–µ—Ä—Ü—è —Ç–∞ —Å—É–¥–∏–Ω',
                    '–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è –ø–∞–º\'—è—Ç—ñ',
                    '–ó–º—ñ—Ü–Ω–µ–Ω–Ω—è —ñ–º—É–Ω—ñ—Ç–µ—Ç—É',
                    '–ó–Ω–∏–∂–µ–Ω–Ω—è –∑–∞–ø–∞–ª–µ–Ω–Ω—è'
                ]
            },
            {
                id: 'vitamin_d3',
                name: '–í—ñ—Ç–∞–º—ñ–Ω D3 + K2',
                description: '–°–∏–Ω–µ—Ä–≥–µ—Ç–∏—á–Ω–∞ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—è –¥–ª—è –∑–¥–æ—Ä–æ–≤\'—è –∫—ñ—Å—Ç–æ–∫ —Ç–∞ —ñ–º—É–Ω–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏',
                price: 2.6,
                emoji: '‚òÄÔ∏è',
                benefits: [
                    '–ó–º—ñ—Ü–Ω–µ–Ω–Ω—è –∫—ñ—Å—Ç–æ–∫',
                    '–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è —ñ–º—É–Ω—ñ—Ç–µ—Ç—É',
                    '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –Ω–∞—Å—Ç—Ä–æ—é',
                    '–†–µ–≥—É–ª—è—Ü—ñ—è –∫–∞–ª—å—Ü—ñ—é'
                ]
            },
            {
                id: 'magnesium',
                name: '–ú–∞–≥–Ω—ñ–π –•–µ–ª–∞—Ç',
                description: '–õ–µ–≥–∫–æ –∑–∞—Å–≤–æ—é–≤–∞–Ω–∞ —Ñ–æ—Ä–º–∞ –º–∞–≥–Ω—ñ—é –¥–ª—è –Ω–µ—Ä–≤–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ —Ç–∞ –º\'—è–∑—ñ–≤',
                price: 2.6,
                emoji: '‚ö°',
                benefits: [
                    '–ó–º–µ–Ω—à–µ–Ω–Ω—è —Å—Ç—Ä–µ—Å—É',
                    '–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Å–Ω—É',
                    '–†–æ–∑—Å–ª–∞–±–ª–µ–Ω–Ω—è –º\'—è–∑—ñ–≤',
                    '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –µ–Ω–µ—Ä–≥—ñ—ó'
                ]
            },
            {
                id: 'zinc',
                name: '–¶–∏–Ω–∫ –ü—ñ–∫–æ–ª—ñ–Ω–∞—Ç',
                description: '–í–∞–∂–ª–∏–≤–∏–π –º—ñ–Ω–µ—Ä–∞–ª –¥–ª—è —ñ–º—É–Ω—ñ—Ç–µ—Ç—É —Ç–∞ –∑–∞–≥–æ—î–Ω–Ω—è —Ä–∞–Ω',
                price: 2.6,
                emoji: 'üõ°Ô∏è',
                benefits: [
                    '–ó–º—ñ—Ü–Ω–µ–Ω–Ω—è —ñ–º—É–Ω—ñ—Ç–µ—Ç—É',
                    '–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è –∑–∞–≥–æ—î–Ω–Ω—è',
                    '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –≥–æ—Ä–º–æ–Ω—ñ–≤',
                    '–ó–¥–æ—Ä–æ–≤\'—è —à–∫—ñ—Ä–∏'
                ]
            },
            {
                id: 'complex',
                name: '–ú—É–ª—å—Ç–∏–≤—ñ—Ç–∞–º—ñ–Ω–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å',
                description: '–ü–æ–≤–Ω–∏–π –Ω–∞–±—ñ—Ä –≤—ñ—Ç–∞–º—ñ–Ω—ñ–≤ —Ç–∞ –º—ñ–Ω–µ—Ä–∞–ª—ñ–≤ –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏',
                price: 2.6,
                emoji: 'üíä',
                benefits: [
                    '–ó–∞–≥–∞–ª—å–Ω–µ –∑–º—ñ—Ü–Ω–µ–Ω–Ω—è',
                    '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –µ–Ω–µ—Ä–≥—ñ—ó',
                    '–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è –º–µ—Ç–∞–±–æ–ª—ñ–∑–º—É',
                    '–ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç–Ω–∏–π –∑–∞—Ö–∏—Å—Ç'
                ]
            },
            {
                id: 'probiotics',
                name: '–ü—Ä–æ–±—ñ–æ—Ç–∏–∫–∏ –ü—Ä–µ–º—ñ—É–º',
                description: '–ñ–∏–≤—ñ –∫–æ—Ä–∏—Å–Ω—ñ –±–∞–∫—Ç–µ—Ä—ñ—ó –¥–ª—è –∑–¥–æ—Ä–æ–≤\'—è –∫–∏—à–µ—á–Ω–∏–∫–∞',
                price: 2.6,
                emoji: 'ü¶†',
                benefits: [
                    '–ó–¥–æ—Ä–æ–≤\'—è –∫–∏—à–µ—á–Ω–∏–∫–∞',
                    '–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Ç—Ä–∞–≤–ª–µ–Ω–Ω—è',
                    '–ó–º—ñ—Ü–Ω–µ–Ω–Ω—è —ñ–º—É–Ω—ñ—Ç–µ—Ç—É',
                    '–°–∏–Ω—Ç–µ–∑ –≤—ñ—Ç–∞–º—ñ–Ω—ñ–≤'
                ]
            }
        ];

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
        document.addEventListener('DOMContentLoaded', function() {
            initializeShop();
            setupEventListeners();
        });

        function initializeShop() {
            userId = getUserId();
            document.getElementById('userIdDisplay').textContent = userId;
            
            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram
            initTelegramIntegration();
            
            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Ç–æ–≤–∞—Ä–∏
            renderProducts();
            
            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ—à–∏–∫
            updateCartDisplay();
        }

        function getUserId() {
            let storedUserId = localStorage.getItem('pantelmed_user_id');
            if (!storedUserId) {
                storedUserId = 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
                localStorage.setItem('pantelmed_user_id', storedUserId);
            }
            return storedUserId;
        }

        function initTelegramIntegration() {
            // Telegram WebApp
            if (typeof window.Telegram !== 'undefined' && window.Telegram.WebApp) {
                const tg = window.Telegram.WebApp;
                tg.ready();
                
                if (tg.initDataUnsafe && tg.initDataUnsafe.user) {
                    currentTelegramUser = tg.initDataUnsafe.user;
                    updateUserInfo();
                }
            }
            
            // URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑ –±–æ—Ç–∞
            const urlParams = new URLSearchParams(window.location.search);
            const telegramUserId = urlParams.get('user_id');
            
            if (telegramUserId) {
                fetchTelegramUser(telegramUserId);
            }
        }

        async function fetchTelegramUser(telegramUserId) {
            try {
                const response = await fetch(`${API_BASE}/api/telegram-user/${telegramUserId}`);
                if (response.ok) {
                    const userData = await response.json();
                    currentTelegramUser = {
                        id: userData.telegram_id,
                        first_name: userData.first_name,
                        last_name: userData.last_name,
                        username: userData.username
                    };
                    updateUserInfo();
                }
            } catch (error) {
                console.log('Telegram user not found:', error);
            }
        }

        function updateUserInfo() {
            if (currentTelegramUser) {
                document.getElementById('user-info').innerHTML = `
                    <strong>üë§ ${currentTelegramUser.first_name}</strong> | 
                    <strong>üÜî ID:</strong> ${userId}
                `;
            }
        }

        function renderProducts() {
            const productsGrid = document.getElementById('products-grid');
            productsGrid.innerHTML = '';

            products.forEach(product => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.innerHTML = `
                    <div class="product-image">${product.emoji}</div>
                    <div class="product-title">${product.name}</div>
                    <div class="product-description">${product.description}</div>
                    <div class="product-benefits">
                        <strong>–ü–µ—Ä–µ–≤–∞–≥–∏:</strong>
                        <ul>
                            ${product.benefits.map(benefit => `<li>${benefit}</li>`).join('')}
                        </ul>
                    </div>
                    <div class="product-price">
                        <div class="price-amount">$${product.price.toFixed(2)}</div>
                        <div class="price-crypto">${product.price.toFixed(1)} USDT</div>
                    </div>
                    <button class="add-to-cart-btn" onclick="addToCart('${product.id}')">
                        üõí –î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞
                    </button>
                `;
                productsGrid.appendChild(productCard);
            });
        }

        function addToCart(productId) {
            const product = products.find(p => p.id === productId);
            if (!product) return;

            const existingItem = cart.find(item => item.id === productId);
            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                cart.push({ ...product, quantity: 1 });
            }

            updateCartDisplay();
            
            // –ê–Ω—ñ–º–∞—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
            const btn = event.target;
            const originalText = btn.innerHTML;
            btn.innerHTML = '‚úÖ –î–æ–¥–∞–Ω–æ!';
            btn.style.background = '#4CAF50';
            setTimeout(() => {
                btn.innerHTML = originalText;
                btn.style.background = '';
            }, 1000);
        }

        function removeFromCart(productId) {
            cart = cart.filter(item => item.id !== productId);
            updateCartDisplay();
        }

        function updateQuantity(productId, change) {
            const item = cart.find(item => item.id === productId);
            if (item) {
                item.quantity += change;
                if (item.quantity <= 0) {
                    removeFromCart(productId);
                } else {
                    updateCartDisplay();
                }
            }
        }

        function updateCartDisplay() {
            const cartItems = document.getElementById('cart-items');
            const cartCount = document.getElementById('cart-count');
            const cartTotal = document.getElementById('cart-total');
            const totalAmount = document.getElementById('total-amount');
            const totalCrypto = document.getElementById('total-crypto');
            const checkoutBtn = document.getElementById('checkout-btn');

            // –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫
            const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
            const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

            cartCount.textContent = totalItems;

            if (cart.length === 0) {
                cartItems.innerHTML = '<div class="empty-cart">–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</div>';
                cartTotal.style.display = 'none';
                checkoutBtn.disabled = true;
            } else {
                cartItems.innerHTML = cart.map(item => `
                    <div class="cart-item">
                        <div class="item-info">
                            <div class="item-name">${item.emoji} ${item.name}</div>
                            <div class="item-price">$${item.price.toFixed(2)} √ó ${item.quantity}</div>
                        </div>
                        <div class="item-controls">
                            <button class="quantity-btn" onclick="updateQuantity('${item.id}', -1)">‚àí</button>
                            <span class="quantity">${item.quantity}</span>
                            <button class="quantity-btn" onclick="updateQuantity('${item.id}', 1)">+</button>
                        </div>
                    </div>
                `).join('');

                totalAmount.textContent = `$${totalPrice.toFixed(2)}`;
                totalCrypto.textContent = `${totalPrice.toFixed(1)}`;
                cartTotal.style.display = 'block';
                checkoutBtn.disabled = false;
            }
        }

        function showCheckoutForm() {
            const checkoutForm = document.getElementById('checkout-form');
            const orderSummary = document.getElementById('order-summary');
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–µ–∑—é–º–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
            const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            orderSummary.innerHTML = `
                <h4>üì¶ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</h4>
                ${cart.map(item => `
                    <div style="display: flex; justify-content: space-between; margin: 8px 0;">
                        <span>${item.emoji} ${item.name} √ó ${item.quantity}</span>
                        <span>$${(item.price * item.quantity).toFixed(2)}</span>
                    </div>
                `).join('')}
                <hr style="margin: 15px 0;">
                <div style="display: flex; justify-content: space-between; font-weight: bold; font-size: 18px;">
                    <span>–ó–∞–≥–∞–ª–æ–º:</span>
                    <span style="color: #4CAF50;">$${totalPrice.toFixed(2)} (${totalPrice.toFixed(1)} USDT)</span>
                </div>
            `;
            
            checkoutForm.style.display = 'block';
            checkoutForm.scrollIntoView({ behavior: 'smooth' });
        }

        function hideCheckoutForm() {
            document.getElementById('checkout-form').style.display = 'none';
        }

        function setupEventListeners() {
            // –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ –º—ñ—Å—Ç–∞
            document.getElementById('city').addEventListener('change', function() {
                const otherCityGroup = document.getElementById('other-city-group');
                if (this.value === 'other') {
                    otherCityGroup.style.display = 'block';
                    document.getElementById('other-city').required = true;
                } else {
                    otherCityGroup.style.display = 'none';
                    document.getElementById('other-city').required = false;
                }
            });

            // –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
            document.getElementById('order-form').addEventListener('submit', async function(e) {
                e.preventDefault();
                await submitOrder();
            });
        }

        async function submitOrder() {
            const form = document.getElementById('order-form');
            const submitBtn = form.querySelector('button[type="submit"]');
            
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="loading"></span> –û—Ñ–æ—Ä–º–ª—é—î–º–æ...';

            try {
                // –ó–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ
                const city = document.getElementById('city').value;
                const orderData = {
                    user_id: userId,
                    telegram_user: currentTelegramUser,
                    items: cart,
                    total_amount: cart.reduce((sum, item) => sum + (item.price * item.quantity), 0),
                    order_info: {
                        phone: document.getElementById('phone').value,
                        city: city === 'other' ? document.getElementById('other-city').value : city,
                        warehouse: document.getElementById('warehouse').value,
                        comment: document.getElementById('comment').value
                    },
                    created_at: new Date().toISOString(),
                    source: 'shop'
                };

                // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                const response = await fetch(`${API_BASE}/api/create-order`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(orderData)
                });

                const result = await response.json();

                if (result.status === 'created') {
                    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
                    await sendOrderNotification(orderData);
                    
                    // –û—á–∏—â–∞—î–º–æ –∫–æ—à–∏–∫
                    cart = [];
                    updateCartDisplay();
                    
                    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–¥—è–∫–∏
                    window.location.href = `thankyou_supplements.html?order_id=${result.order_id}`;
                } else {
                    throw new Error(result.error || '–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è');
                }

            } catch (error) {
                console.error('Order submission error:', error);
                alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = '‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è';
            }
        }

        async function sendOrderNotification(orderData) {
            try {
                await fetch(`${API_BASE}/api/order-notification`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ order: orderData })
                });
            } catch (error) {
                console.error('Notification error:', error);
            }
        }
    </script>
</body>
</html>
